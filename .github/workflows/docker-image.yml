# See https://github.com/docker/build-push-action/blob/master/docs/advanced/multi-platform.md

name: Docker Image CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      # See https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      # See https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # See https://github.com/docker/login-action
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Platforms argument not needed, because we build on amd64
      - name: Build and push (amd64)
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ckulka/docker-multi-arch-example-gh:amd64

      # Edge case: platform not supported by QEMU and Alpine base images don't
      # exist. Workaround is to use a separate Dockerfile and correct the
      # annotations later with docker manifest command.
      - name: Build and push (arm32v5)
        uses: docker/build-push-action@v2
        with:
          file: arm32v5.dockerfile
          push: true
          tags: ckulka/docker-multi-arch-example-gh:arm32v5

      - name: Build and push (arm32v7)
        uses: docker/build-push-action@v2
        with:
          file: arm32v7.dockerfile
          platforms: linux/arm/v7
          push: true
          tags: ckulka/docker-multi-arch-example-gh:arm32v7

      - name: Build and push (arm64v8)
        uses: docker/build-push-action@v2
        with:
          file: arm64v8.dockerfile
          platforms: linux/arm64/v8
          push: true
          tags: ckulka/docker-multi-arch-example-gh:arm64v8

      # Build the manifest, fix the annotations for our arm32v5 edge case and
      # upload the manifest to the Docker registry.
      - name: Publish manifest
        run: |
          docker manifest create ckulka/docker-multi-arch-example-gh:latest ckulka/docker-multi-arch-example-gh:amd64 ckulka/docker-multi-arch-example-gh:arm32v5 ckulka/docker-multi-arch-example-gh:arm32v7 ckulka/docker-multi-arch-example-gh:arm64v8
          docker manifest annotate --os linux --arch arm --variant v5 ckulka/docker-multi-arch-example-gh:latest ckulka/docker-multi-arch-example-gh:arm32v5
          docker manifest push ckulka/docker-multi-arch-example-gh:latest
        env:
          # This flag won't be needed in later versions of Docker. It has been
          # deprecated, experimental features will be enabled by default.
          DOCKER_CLI_EXPERIMENTAL: enabled
